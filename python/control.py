import radial_distribution
import plots_over_time
import plots_analysis
import linearization
import positions
import setup
import msd

# Check for needed directories at start
setup.setup()


class control(object):
    '''A class for controlling the sequence of scripts run'''

    def analyze(initial_skip, initial, final):
        '''
        The mean squared displacement is calculated by msd.
        The propensity for motion is calculated by positions.
        Diffusion is calculated by linearization.
        Datapoints to be linearized by interval [initial, final].
        '''

        print('Crunching data')
        msd.analyze(initial_skip)
        positions.traveled()
        linearization.fit(initial, final)

    def plot_system(start):
        '''
        System aspects such as temperature, pressure, volume, etc are plotted
        against the timestep by plots_over_time.
        '''

        print('Plotting data from systems')
        plots_over_time.plot(start)

    def plot_analysis(stop, point):
        '''
        The plots for mean squared displacement and propensity for motion are
        generated here. Each run has its own plot as well as an overall plot
        that contains all runs for both mean squred displacement and propensity
        for motion. Radial distribution function plots are also saved. The
        point where the RDF is taken is defined by point. If the point is
        defined as 10 for a data aquisition of 100 steps/aquisition, then the
        RDF is taken at step 10*100.
        '''

        print('Plotting the analysis data')
        plots_analysis.plot(stop)
        radial_distribution.plot(point)

    def clean():
        '''
        This clears all data generated by LAMMPS and python scripts. Do not run
        if any data is needed for future reference.
        '''

        print('Deleting all data')
        setup.clean()
